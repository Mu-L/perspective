import"https://cdn.jsdelivr.net/npm/@finos/perspective-viewer@3.2.1/dist/cdn/perspective-viewer.js";import"https://cdn.jsdelivr.net/npm/@finos/perspective-workspace@3.2.1/dist/cdn/perspective-workspace.js";import"https://cdn.jsdelivr.net/npm/@finos/perspective-viewer-datagrid@3.2.1/dist/cdn/perspective-viewer-datagrid.js";import"https://cdn.jsdelivr.net/npm/@finos/perspective-viewer-d3fc@3.2.1/dist/cdn/perspective-viewer-d3fc.js";import"https://cdn.jsdelivr.net/npm/@finos/perspective-viewer-openlayers/dist/cdn/perspective-viewer-openlayers.js";import e from"https://cdn.jsdelivr.net/npm/@finos/perspective@3.2.1/dist/cdn/perspective.js";let t=localStorage.getItem("layouts")?JSON.parse(localStorage.getItem("layouts")):void 0;const n=await e.worker(),i=document.createElement("style");let s,o;function a(){if("Pro Light"===i.dataset.theme){i.textContent=s,document.body.classList.add("dark"),window.theme.textContent="Light Theme";for(const e of document.querySelectorAll("perspective-viewer"))e.setAttribute("theme","Pro Dark"),e.restyleElement();i.dataset.theme="Pro Dark"}else{i.textContent=o,document.body.classList.remove("dark"),window.theme.textContent="Dark Theme";for(const e of document.querySelectorAll("perspective-viewer"))e.setAttribute("theme","Pro Light"),e.restyleElement();i.dataset.theme="Pro Light"}}document.head.appendChild(i),s=await fetch("https://cdn.jsdelivr.net/npm/@finos/perspective-workspace/dist/css/pro-dark.css").then((e=>e.text())),o=await fetch("https://cdn.jsdelivr.net/npm/@finos/perspective-workspace/dist/css/pro.css").then((e=>e.text())),document.body.innerHTML='\n        <style>\n        </style>\n        <div id=\'buttons\'>\n            <span id="message"></span>\n            <select id="layouts"></select>\n            <button id="save_as">Save As</button>\n            <input id="name_input" style="display: none"></input>\n            <button id="save" style="display: none">Save</button>\n            <button id="cancel" style="display: none">Cancel</button>\n            <button id="theme" style="float: right">Light Theme</button>\n            <button id="copy" style="float: right">Debug to Clipboard</button>\n            <button id="reset" style="float: right">Reset LocalStorage</button>\n            <a href="https://github.com/texodus/nypd-ccrb">NYCLU/CCRB Data</a>\n            <a href="https://github.com/finos/perspective">Built With Perspective</a>\n        </div>\n        <perspective-workspace id=\'workspace\'></perspective-workspace>\n    '.trim(),a(),window.workspace.addEventListener("workspace-new-view",(({detail:{widget:e}})=>{e.viewer.setAttribute("theme",i.dataset.theme)})),window.workspace.addTable("ccrb",(async()=>n.table(await async function(e){window.message.textContent="Downloading...";const t=await fetch(e),n=await new Response(await t.blob()).arrayBuffer();return window.message.style.display="none",n}("nypdccrb.arrow")))()),null==t&&(t=await(await fetch("./layout.json")).json());const d=Object.keys(t);let r=t[d[0]];function c(){const e=Object.keys(t);window.layouts.innerHTML="";for(const t of e)window.layouts.innerHTML+=`<option${t===r?" selected='true'":""}>${t}</option>`}function l(){window.save_as.style.display="inline-block",window.save.style.display="none",window.cancel.style.display="none",window.name_input.style.display="none",window.copy.style.display="inline-block",window.layouts.style.display="inline-block"}await window.workspace.restore(r),c(),window.name_input.value=d[0],window.layouts.addEventListener("change",(async()=>{0!==window.layouts.value.trim().length&&(window.workspace.innerHTML="",await window.workspace.restore(t[window.layouts.value]),window.name_input.value=window.layouts.value)})),window.save_as.addEventListener("click",(async()=>{window.save_as.style.display="none",window.save.style.display="inline-block",window.cancel.style.display="inline-block",window.name_input.style.display="inline-block",window.copy.style.display="none",window.layouts.style.display="none"})),window.cancel.addEventListener("click",l),window.reset.addEventListener("click",(()=>{localStorage.clear(),window.reset.innerText="Reset!",setTimeout((()=>{window.reset.innerText="Reset LocalStorage"}),1e3)})),window.save.addEventListener("click",(async()=>{const e=await window.workspace.save(),n=window.name_input.value;t[n]=e,c(),window.layouts.value=n,window.save_as.innerText="Saved!",setTimeout((()=>{window.save_as.innerText="Save As"}),1e3),localStorage.setItem("layouts",JSON.stringify(t)),l()})),window.copy.addEventListener("click",(async()=>{await navigator.clipboard.writeText(JSON.stringify(t)),window.copy.innerText="Copied!",setTimeout((()=>{window.copy.innerText="Debug to Clipboard"}),1e3)})),window.theme.addEventListener("click",a);